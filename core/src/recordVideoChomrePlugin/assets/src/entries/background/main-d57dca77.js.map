{"version":3,"file":"main-d57dca77.js","sources":["../../../../../src/entries/background/main.ts"],"sourcesContent":["import * as Sentry from '@sentry/browser'\nimport { offscreenUrl } from '~/constants'\nimport { getCurrentTab, getStreamId, hasOffscreenDocument } from '~/lib/utils'\nimport { RecordingMode, RecordingOptions } from '~/types'\nimport { useStore } from '../store'\n\nif (process.env.NODE_ENV === 'production') {\n  Sentry.init({\n    dsn: 'https://d12dd277a192c6ca69ba59ebb958e6e2@o82598.ingest.sentry.io/4505787043479552',\n  })\n}\n\nlet isRecording = false\nlet recordingMode: RecordingMode | null\nlet recordingTabId: number | null = null\nlet resultTabId: number | null = null\nconst enabledTabs = new Set()\n\nfunction stopRecording() {\n  chrome.runtime.sendMessage({\n    type: 'stop-recording',\n    target: 'offscreen',\n  })\n  recordingTabId &&\n    chrome.tabs.sendMessage(recordingTabId, { type: 'stop-recording' })\n  if (recordingMode === 'desktop') {\n    resultTabId &&\n      chrome.tabs.sendMessage(resultTabId, { type: 'stop-recording' })\n  }\n}\n\nchrome.tabs.onUpdated.addListener((tabId, changeInfo, _tab) => {\n  if (changeInfo.status === 'loading' && enabledTabs.has(tabId)) {\n    chrome.scripting.executeScript({\n      target: { tabId },\n      files: ['/src/entries/contentScript/primary/main.js'],\n    })\n  }\n})\n\nchrome.tabs.onRemoved.addListener((tabId) => {\n  if (enabledTabs.has(tabId)) {\n    enabledTabs.delete(tabId)\n  }\n})\n\nchrome.action.onClicked.addListener(async (tab) => {\n  if (!tab.id) return\n\n  if (isRecording) {\n    stopRecording()\n  } else {\n    if (enabledTabs.has(tab.id)) {\n      chrome.tabs.sendMessage(tab.id, { type: 'show-controlbar' })\n    } else {\n      await chrome.scripting.executeScript({\n        target: { tabId: tab.id },\n        files: ['/src/entries/contentScript/primary/main.js'],\n      })\n      chrome.tabs.sendMessage(tab.id, { type: 'show-controlbar' })\n      enabledTabs.add(tab.id)\n    }\n  }\n})\n\nasync function startRecording(data: Partial<RecordingOptions>) {\n  const hasOffscreen = await hasOffscreenDocument()\n  if (!hasOffscreen) {\n    await chrome.offscreen.createDocument({\n      url: offscreenUrl,\n      justification: 'Recording from chrome.tabCapture API',\n      reasons: [chrome.offscreen.Reason.USER_MEDIA],\n    })\n  }\n\n  recordingMode = data.recordingMode ?? null\n  const tab = await getCurrentTab()\n  if (!tab.id) return\n\n  if (recordingMode && ['tab', 'area'].includes(recordingMode)) {\n    const streamId = await getStreamId(tab.id)\n    chrome.runtime.sendMessage({\n      type: 'start-recording',\n      target: 'offscreen',\n      data: { streamId, width: tab.width, height: tab.height, ...data },\n    })\n    recordingTabId = tab.id\n  } else {\n    const recordingTab = await chrome.tabs.create({\n      url: `/src/entries/tabs/main.html?tabId=${tab.id}`,\n    })\n    resultTabId = recordingTab.id ?? null\n  }\n  chrome.action.setBadgeText({ text: 'REC' })\n  chrome.action.setBadgeTextColor({ color: '#ffffff' })\n  chrome.action.setBadgeBackgroundColor({ color: '#dc2626' })\n  isRecording = true\n}\n\nchrome.runtime.onMessage.addListener(\n  async (message, _sender, _sendResponse) => {\n    if (message.target !== 'background') {\n      return\n    }\n    switch (message.type) {\n      case 'recording-complete':\n        if (recordingMode === 'desktop') {\n          resultTabId && chrome.tabs.update(resultTabId, { active: true })\n        } else {\n          chrome.tabs.create({\n            url: `/src/entries/tabs/main.html?videoUrl=${encodeURIComponent(\n              message.videoUrl\n            )}`,\n          })\n        }\n        chrome.action.setBadgeText({ text: '' })\n        useStore.setState({ isRecording: false })\n        isRecording = false\n        recordingTabId = null\n        recordingMode = null\n        break\n      case 'start-recording':\n        startRecording(message.data)\n        break\n      default:\n        throw new Error('Unrecognized message:', message.type)\n    }\n  }\n)\n"],"names":["Sentry.init","isRecording","recordingMode","recordingTabId","resultTabId","enabledTabs","stopRecording","tabId","changeInfo","_tab","tab","startRecording","data","hasOffscreenDocument","offscreenUrl","getCurrentTab","streamId","getStreamId","message","_sender","_sendResponse","useStore"],"mappings":"sdAOEA,EAAY,CACV,IAAK,mFAAA,CACN,EAGH,IAAIC,EAAc,GACdC,EACAC,EAAgC,KAChCC,EAA6B,KACjC,MAAMC,MAAkB,IAExB,SAASC,GAAgB,CACvB,OAAO,QAAQ,YAAY,CACzB,KAAM,iBACN,OAAQ,WAAA,CACT,EACDH,GACE,OAAO,KAAK,YAAYA,EAAgB,CAAE,KAAM,iBAAkB,EAChED,IAAkB,WACpBE,GACE,OAAO,KAAK,YAAYA,EAAa,CAAE,KAAM,iBAAkB,CAErE,CAEA,OAAO,KAAK,UAAU,YAAY,CAACG,EAAOC,EAAYC,IAAS,CACzDD,EAAW,SAAW,WAAaH,EAAY,IAAIE,CAAK,GAC1D,OAAO,UAAU,cAAc,CAC7B,OAAQ,CAAE,MAAAA,CAAM,EAChB,MAAO,CAAC,4CAA4C,CAAA,CACrD,CAEL,CAAC,EAED,OAAO,KAAK,UAAU,YAAaA,GAAU,CACvCF,EAAY,IAAIE,CAAK,GACvBF,EAAY,OAAOE,CAAK,CAE5B,CAAC,EAED,OAAO,OAAO,UAAU,YAAY,MAAOG,GAAQ,CAC5CA,EAAI,KAELT,EACYK,IAEVD,EAAY,IAAIK,EAAI,EAAE,EACxB,OAAO,KAAK,YAAYA,EAAI,GAAI,CAAE,KAAM,kBAAmB,GAErD,MAAA,OAAO,UAAU,cAAc,CACnC,OAAQ,CAAE,MAAOA,EAAI,EAAG,EACxB,MAAO,CAAC,4CAA4C,CAAA,CACrD,EACD,OAAO,KAAK,YAAYA,EAAI,GAAI,CAAE,KAAM,kBAAmB,EAC/CL,EAAA,IAAIK,EAAI,EAAE,GAG5B,CAAC,EAED,eAAeC,EAAeC,EAAiC,CACxC,MAAMC,KAEnB,MAAA,OAAO,UAAU,eAAe,CACpC,IAAKC,EACL,cAAe,uCACf,QAAS,CAAC,OAAO,UAAU,OAAO,UAAU,CAAA,CAC7C,EAGHZ,EAAgBU,EAAK,eAAiB,KAChC,MAAAF,EAAM,MAAMK,IAClB,GAAKL,EAAI,GAET,IAAIR,GAAiB,CAAC,MAAO,MAAM,EAAE,SAASA,CAAa,EAAG,CAC5D,MAAMc,EAAW,MAAMC,EAAYP,EAAI,EAAE,EACzC,OAAO,QAAQ,YAAY,CACzB,KAAM,kBACN,OAAQ,YACR,KAAM,CAAE,SAAAM,EAAU,MAAON,EAAI,MAAO,OAAQA,EAAI,OAAQ,GAAGE,CAAK,CAAA,CACjE,EACDT,EAAiBO,EAAI,QAKrBN,GAHqB,MAAM,OAAO,KAAK,OAAO,CAC5C,IAAK,qCAAqCM,EAAI,IAAA,CAC/C,GAC0B,IAAM,KAEnC,OAAO,OAAO,aAAa,CAAE,KAAM,KAAO,CAAA,EAC1C,OAAO,OAAO,kBAAkB,CAAE,MAAO,SAAW,CAAA,EACpD,OAAO,OAAO,wBAAwB,CAAE,MAAO,SAAW,CAAA,EAC5CT,EAAA,GAChB,CAEA,OAAO,QAAQ,UAAU,YACvB,MAAOiB,EAASC,EAASC,IAAkB,CACrC,GAAAF,EAAQ,SAAW,aAGvB,OAAQA,EAAQ,KAAM,CACpB,IAAK,qBACChB,IAAkB,UACpBE,GAAe,OAAO,KAAK,OAAOA,EAAa,CAAE,OAAQ,GAAM,EAE/D,OAAO,KAAK,OAAO,CACjB,IAAK,wCAAwC,mBAC3Cc,EAAQ,QAAA,GACV,CACD,EAEH,OAAO,OAAO,aAAa,CAAE,KAAM,EAAI,CAAA,EACvCG,EAAS,SAAS,CAAE,YAAa,EAAO,CAAA,EAC1BpB,EAAA,GACGE,EAAA,KACDD,EAAA,KAChB,MACF,IAAK,kBACHS,EAAeO,EAAQ,IAAI,EAC3B,MACF,QACE,MAAM,IAAI,MAAM,wBAAyBA,EAAQ,IAAI,CACzD,CACF,CACF"}